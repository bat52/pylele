name: TestUbuntu

on: [push]

jobs:
  build:
    runs-on:  ubuntu-latest # ubuntu-20.04
    strategy:
      matrix:
        # https://github.com/actions/setup-python/issues/853
        python-version: ["3.10"] #["3.8", "3.8.5", "3.8.10", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: pip configuration report
      run: |
        pip list
    - name: install dependencies
      run: | 
        chmod +x ./install_dependencies.sh
        sudo ./install_dependencies.sh
    - name: test
      run: |
        python ./pylele_test.py
    # for debugging, show all the files
    - name: show files
      run: |
        ls -R
        find ./test/ | grep stl
    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
          # path depends on the tag and the module name
          name: pylele_test_out
          path: test/**/**/**/* #find ./test/fretboard_assembly/cadquery/*
    - name: test pylele.sh
      run: |
        source pylele.sh
    - name: test pylele_assemble.py
      run: |
        python3 ./pylele1/pylele_assemble.py
    - name: test pylele2.sh
      run: |
        source pylele2.sh -odoff
    - name: upload demo
      uses: actions/upload-artifact@v4
      with:
          # path depends on the tag and the module name
          name: pylele_demo_out
          path: build/*/*.stl
    - name: convert to glb
      run: |
        python3 ./api/stl2glb.py build/LeleAllAssembly/LeleAllAssembly.stl

  ##############################################################
  # Publish to pages to get a nicely formatted result

  # Deploy job
  pages:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    
    steps:
      - name: generate redirect to viewer
        run: |
          cat << EOF >> index.html
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <!-- Loads <model-viewer> for modern browsers: -->
            <script type="module" src="https://unpkg.com/@google/model-viewer/dist/model-viewer.js"></script>

            <!-- Loads <model-viewer> for old browsers like IE11: -->
            <script nomodule src="https://unpkg.com/@google/model-viewer/dist/model-viewer-legacy.js"></script>

            <!-- The following libraries and polyfills are recommended to maximize browser support -->
            <!-- NOTE: you must adjust the paths as appropriate for your project -->
            <!-- REQUIRED: Web Components polyfill to support Edge and Firefox < 63 -->
            <script src="https://unpkg.com/@webcomponents/webcomponentsjs@2.1.3/webcomponents-loader.js"></script>

            <!-- OPTIONAL: Intersection Observer polyfill for better performance in Safari and IE11 -->
            <script src="https://unpkg.com/intersection-observer@0.5.1/intersection-observer.js"></script>

            <!-- OPTIONAL: Resize Observer polyfill improves resize behavior in non-Chrome browsers -->
            <script src="https://unpkg.com/resize-observer-polyfill@1.5.1/dist/ResizeObserver.js"></script>

            <!-- OPTIONAL: Fullscreen polyfill is required for experimental AR features in Canary -->
            <!--<script src="https://unpkg.com/fullscreen-polyfill@1.0.2/dist/fullscreen.polyfill.js"></script>-->
            <!-- OPTIONAL: Include prismatic.js for Magic Leap support -->
            <!--<script src="https://unpkg.com/@magicleap/prismatic@0.18.2/prismatic.min.js"></script>-->
                                      
            </head>
            <body>
              <script>
                location.href = "https://gds-viewer.tinytapeout.com/?model=" + encodeURIComponent(location.href + '/tinytapeout.gds.gltf');
              </script>
            </body>
            </html>
          EOF
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
  

##############################################################
# Add the 3D and 2D preview to the page

  preview:
    needs: pages
    runs-on: ubuntu-latest
    steps:
    - name: add gds preview
      run: |
        PAGE_URL=${{ needs.pages.outputs.page_url }}
        PAGE_URL=$(echo "$PAGE_URL" | sed -e 's/\/$//')
        cat << EOF >> $GITHUB_STEP_SUMMARY
        # 3D Viewer
        [open 3D viewer](https://gds-viewer.tinytapeout.com/?model=$PAGE_URL/tinytapeout.gds.gltf)
        # 2D Preview
        ![png]($PAGE_URL/gds_render.png)
        EOF